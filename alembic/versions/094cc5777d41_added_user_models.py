"""Added user models

Revision ID: 094cc5777d41
Revises: 132a33370872
Create Date: 2025-04-10 17:56:51.553132

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '094cc5777d41'
down_revision: Union[str, None] = '132a33370872'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('role', sa.Enum('CUSTOMER', 'OWNER', 'STAFF', name='userrole'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.add_column('bookings', sa.Column('customer_id', sa.Uuid(), nullable=False))
    op.add_column('bookings', sa.Column('service_id', sa.Uuid(), nullable=False))
    op.alter_column('bookings', 'customer_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('bookings', 'customer_email',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.create_foreign_key(None, 'bookings', 'services', ['service_id'], ['id'])
    op.create_foreign_key(None, 'bookings', 'users', ['customer_id'], ['id'])
    op.add_column('businesses', sa.Column('owner_id', sa.Uuid(), nullable=False))
    op.create_foreign_key(None, 'businesses', 'users', ['owner_id'], ['id'])
    op.add_column('staff', sa.Column('user_id', sa.Uuid(), nullable=False))
    op.create_foreign_key(None, 'staff', 'users', ['user_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'staff', type_='foreignkey')
    op.drop_column('staff', 'user_id')
    op.drop_constraint(None, 'businesses', type_='foreignkey')
    op.drop_column('businesses', 'owner_id')
    op.drop_constraint(None, 'bookings', type_='foreignkey')
    op.drop_constraint(None, 'bookings', type_='foreignkey')
    op.alter_column('bookings', 'customer_email',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('bookings', 'customer_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('bookings', 'service_id')
    op.drop_column('bookings', 'customer_id')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
